+++++++++++++++++static data of card with img and some headings
const RestaurantCard =()=>{
    return(
        <div className="res-card" style={{backgroundColor:"#f0f0f0"}}>
            <img className="res-logo" alt="res-logo" src="https:/banner2.cleanpng.com/20180720/spp/956a15ac3b67af3b8619d9a8771d1399.webp" />
            <h3>Meghana Foods</h3>
            <h4>Biryani, North Indian, Asian</h4>
            <h4>4.4 stars</h4>
            <h4>38 mins</h4>
        </div>
    );
};

+++++++++++++++++PROPS(dynamically data send ex: from APIS) data of card with resName and cuisine
const RestaurantCard =(props)=>{         //using props
    console.log(props);  //ll give us an obj - with resName and cuisine as properties
    return(
        <div className="res-card" style={{backgroundColor:"#f0f0f0"}}>
            <img className="res-logo" alt="res-logo" src="https:/banner2.cleanpng.com/20180720/spp/956a15ac3b67af3b8619d9a8771d1399.webp" />
            <h3>{props.resName}</h3>            //as its like passing JS object, can only be passed inside curly braces
            <h4>{props.cuisine}</h4>
            <h4>4.4 stars</h4>
            <h4>38 mins</h4>
        </div>
    );
};

const Body =()=>{
    return(
        <div className="body">
            <div className="search">Search</div>
            <div className="res-container">
                <RestaurantCard resName="Meghana Foods" cuisine="Biryani, North Indian, Asian"/> //passing in props
            </div>
        </div>
    );
};


+++++++Destructuring Props on the fly- JS concept
const{resName, cuisine} = props;   //in JS

const RestaurantCard =({resName, cuisine})=>{     //pass direct prop names inside curly braces
   
    return(
        <div className="res-card" style={{backgroundColor:"#f0f0f0"}}>
            <img className="res-logo" alt="res-logo" src="https:/banner2.cleanpng.com/20180720/spp/956a15ac3b67af3b8619d9a8771d1399.webp" />
            <h3>{resName}</h3>  //using prop names  directly inside curly braces
            <h4>{cuisine}</h4>
            <h4>4.4 stars</h4>
            <h4>38 mins</h4>
        </div>
    );
};



+++++++++++++++++swiggy api
https://github.com/namastedev/namaste-react/blob/main/src/components/RestaurantCard.js

import { useContext } from "react";
import { CDN_URL } from "../utils/constants";
import UserContext from "../utils/UserContext";

const RestaurantCard = (props) => {
  const { resData } = props;
  const { loggedInUser } = useContext(UserContext);

  const {
    cloudinaryImageId,
    name,
    avgRating,
    cuisines,
    costForTwo,
    deliveryTime,
  } = resData;

  return (
    <div
      data-testid="resCard"
      className="m-4 p-4 w-[250px] rounded-lg bg-gray-100 hover:bg-gray-200"
    >
      <img
        className="rounded-lg"
        alt="res-logo"
        src={CDN_URL + cloudinaryImageId}
      />
      <h3 className="font-bold py-4 text-lg">{name}</h3>
      <h4>{cuisines.join(", ")}</h4>
      <h4>{avgRating} stars</h4>
      <h4>â‚¹{costForTwo / 100} FOR TWO</h4>
      <h4>{deliveryTime} minutes</h4>
      <h4>User : {loggedInUser} </h4>
    </div>
  );
};

// Higher Order Component

// input - RestaurantCard =>> RestaurantCardPromoted

export const withPromtedLabel = (RestaurantCard) => {
  return (props) => {
    return (
      <div>
        <label className="absolute bg-black text-white m-2 p-2 rounded-lg">
          Promoted
        </label>
        <RestaurantCard {...props} />
      </div>
    );
  };
};

export default RestaurantCard;

++++++++++++++++++++++Res list data from swiggy
https://github.com/namastedev/namaste-react/blob/main/src/components/mocks/mockResListData.json


3 step process- Talk is cheap
1. read the api + fetch only card detail n store as resList as array of objects
const resList
2. map to iterate through list, and pass on props and key - as id from list: info>id or index and restaurant as iterate through all list
<div className="res-container">
                {resList.map((restaurant)=>(
                    <RestaurantCard key={restaurant.info.id} resData={restaurant} />
                ))}
            </div>
3. destructure- propds > resData> all individual ids like id, deliveryTime etc so we can use name directly n clean code and fo image also cdn from swiggy and then 
curly braces for dyanmic pass data for each image in cards list
const RestaurantCard =(props)=>{
    const{resData} =props;
    const{cloudinaryImageId,name, avgRating, cuisines, costForTwo, deliveryTime}= resData?.info;
   
    return(
        <div className="res-card" style={{backgroundColor:"#f0f0f0"}}>
            <img className="res-logo" alt="res-logo" src={"https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/" + cloudinaryImageId} />
            <h3>{name}</h3>
            <h4>{cuisines.join(", ")}</h4>
            <h4>{avgRating} stars</h4>
            <h4>{costForTwo}</h4>
            <h4>{deliveryTime}</h4>
        </div>
    );
};


+++++++++++++++++++++++++++++lets get hooked+++++++++
export import , file structuring
state var and hooks-useState(normal js utility funtions) and react keeping track of state var

import { useState } from "react";  //import

const Body =()=>{
const [listOfRestaurants, setListOfRestaurants] = useState(resList);  //create state var and passed resList via useStat eHook

    return(
        <div className="body"> 
            <div className="filter">
                <button className="filterBtn" onClick={()=>{
                const filteredList = listOfRestaurants.filter((res)=> res.info.avgRating>4.5);
                setListOfRestaurants(filteredList);  //update the state var using setListOfRestaurants
            }}>Top Rated Restaurants</button>
            </div>
            <div className="res-container">
                {listOfRestaurants.map((restaurant)=>(
                    <RestaurantCard key={restaurant.info.id} resData={restaurant} />
                ))}
            </div>
        </div>
    );
};


its array Destructuring
const arr= useState(resList); as useState returns an array
const [listOfRestaurants, setListOfRestaurants] = arr; //sestructuring it on d fly
const listOfRestaurants =arr[0];
const setListOfRestaurants =arr[1];